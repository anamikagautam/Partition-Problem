#include <stdio.h> 
#include<stdbool.h>
bool findPartiion (int arr[], int n) 
{ 
	int sum = 0,i, j;
	for (i = 0; i < n; i++) 
	sum += arr[i]; 
	if (sum%2 != 0) 
	return false; 
	bool part[sum/2+1][n+1]; 
	// initialize top row as true 
	for (i = 0; i <= n; i++) 
	part[0][i] = true; 
	// initialize leftmost column, except part[0][0], as 0 
	for (i = 1; i <= sum/2; i++) 
	part[i][0] = false;	 
	// Fill the partition table in botton up manner 
	for (i = 1; i <= sum/2; i++) 
	{ 
	for (j = 1; j <= n; j++) 
	{ 
		part[i][j] = part[i][j-1]; 
		if (i >= arr[j-1]) 
		part[i][j] = part[i][j] || part[i - arr[j-1]][j-1]; 
	}		 
	}	 
	return part[sum/2][n]; 
}	 
int main() 
{ 
    int t;
    scanf("%d", &t);
    for(int i = 0; i < t; i++) {
        int arr[100];
        int x;
        scanf("%d", &x);    
    for(int i = 0; i < x; i++) 
         scanf("%d", &arr[i]);
        if (findPartiion(arr, x) == true) 
        	printf("True"); 
        else
        	printf("False"); 
        getchar(); 
}
return 0; 
} 
